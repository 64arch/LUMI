@page "/"
@using LUMI.DataAccess.Movies


<header class="top-bar">
    <div class="search-bar">
        <input type="text" placeholder="Поиск">
        <i class="icon-search"></i>
    </div>
</header>
<section class="featured-content"
         onclick="window.location.href = '/movie/id=@futuredMovie.ID'"
         style="background-image: url('@futuredMovie.LargePoster');">
    <div class="featured-info">
        <div class="featured-tags">
            @if (futuredMovie.Tags?.Count != 0 && futuredMovie.Tags != null) {
                @foreach (var tag in futuredMovie.Tags) {
                    <span class="tag">@tag</span>
                }
            }
        </div>
        <h1 class="featured-title">@futuredMovie.Title</h1>
        <p class="featured-description">
            @futuredMovie.Description
        </p>
    </div>
</section>
<section class="recommended">
    <h2>Фильмы</h2>
    <div class="movie-grid">
        @if (movies.Count != 0) {
            @foreach (var movie in movies) {
                <div class="movie-card">
                    <div class="movie-thumbnail" onclick="window.location = '/movie/id=@movie.ID'"
                         style="background-image: url('@movie.Poster');"></div>
                    <div class="movie-info">
                        <div class="movie-tags">
                            <span class="tag">@movie.Tags.FirstOrDefault()</span>
                        </div>
                    </div>
                    <h3 class="movie-title">@movie.Title</h3>
                </div>
            }   
        }
        else {
            <h3 style="color: var(--hover-color);">Фильмы не найдены</h3>
        }
    </div>
</section>


@code {
    List<Models.Movie?> movies = new ();
    Models.Movie? futuredMovie = new();
    protected override async Task OnInitializedAsync() {
        try {
            movies = await MoviesDBContext.GetMoviesAsync();
            /*movies = movies
                .Where(x => x.Tags?.FirstOrDefault() != null && x.Tags.FirstOrDefault().Equals("Драма"))
                .ToList();*/
            /*var rnd = new Random().Next(0, movies.Count);*/
            futuredMovie = movies.OrderByDescending(movie => movie.Rating).FirstOrDefault();
        }
        catch (Exception e) {
            Console.WriteLine(e);
        }
    }
}
