@page "/movie/id={MovieID:int}"
@using LUMI.DataAccess.Movies
@using LUMI.Models
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<title>@_movieDetails.Title</title>

<header class="top-bar">
    <div class="search-bar">
    </div>
    <div class="user-actions">
        <div class="user-avatar" onclick="window.location='/admin'"></div>
    </div>
</header>

<div class="movie-details">
    <div class="movie-hero" style="background-image: url('@_movieDetails.LargePoster')">
        <div class="movie-hero-content">
            <div class="movie-poster" style="background-image: url('@_movieDetails.Poster')"></div>
            <div class="movie-info">
                <div class="movie-tags">
                    @if (_movieDetails.Tags?.Count != 0 && _movieDetails.Tags != null) {
                        @foreach (var tag in _movieDetails.Tags) {
                            <span class="tag">@tag.Trim()</span>
                        }
                    }
                </div>
                <h1>@_movieDetails.Title</h1>
                <div class="movie-meta">
                    <span title="Дата виходу">
                        @_movieDetails.ReleaseDate.ToShortDateString().Replace(".", "/")
                    </span>
                    <span>•</span>
                    <span title="Тривалість">@_movieDetails.Duration</span>
                    <span>•</span>
                    <span title="Завантажено на сайт">@_movieDetails.CreatedAt.ToShortDateString().Replace(".", "/")</span>
                </div>
                <div class="movie-rating">
                    <div class="rating-circle">
                        <span>@_movieDetails.Rating.ToString().Replace(",", ".")</span>
                    </div>
                    <span>Рейтинг</span>
                </div>
                <p class="movie-overview">
                    @_movieDetails.Description
                </p>
                <div class="movie-actions">
                    <button @onclick="ScrollToMovie" class="btn btn-primary">
                        <i class="icon-play"></i>Дивитись
                    </button>
                    @if (!string.IsNullOrEmpty(_movieDetails.DownloadLink)) {
                        <button class="btn btn-icon" onclick="window.open('@_movieDetails.DownloadLink', '_blank').focus();">
                            <i class="icon-download"></i>Завантажити
                        </button>   
                    }
                    
                </div>
            </div>
        </div>
    </div>

    <div class="movie-content">
        <div class="cast-section">
            <h2 class="comments-title">Зображення</h2>
            <div class="media-row">
                @if (_movieDetails.Media?.Count != 0 && _movieDetails.Media != null) {
                    @foreach (var media in _movieDetails.Media) {
                        <img src="@media" draggable="false"/>
                    }
                }
            </div>
        </div>
        
        <div id="watch_movie" 
            style="width: 100%; height: fit-content; display: flex; justify-content: center; padding-top: 40px; padding-bottom: 40px">
            <div class="kinobox_player" style="width: 60%"></div>
        </div>
        <script src="https://kinobox.tv/kinobox.min.js"></script>
        <script src="js/kinoboxPlayer.js"></script>

        <div class="cast-section">
            <h2 class="comments-title">Коментарі</h2>
            <div class="comment-input">
                <textarea placeholder="Ім'я..." @bind="_username" 
                class="input-field" style="max-width: 200px;" maxlength="50"></textarea>
                <textarea placeholder="Напишіть щось... (максимум 255 символів)" 
                @bind="_comment" class="input-field" maxlength="255"></textarea>
                <button class="btn btn-primary" @onclick="AddComment">Додати коментар</button>

            </div>
            @foreach (var comment in _comments.OrderByDescending(_comment => _comment.DatePosted)) {
                <div class="comment" style="margin-top: 30px">
                    <img src="https://static.vecteezy.com/system/resources/previews/013/360/247/non_2x/default-avatar-photo-icon-social-media-profile-sign-symbol-vector.jpg"
                         draggable="false"
                         class="comment-avatar">
                    <div class="comment-content">
                        <div class="comment-header">
                            <span class="comment-author">@comment.Username</span>
                            <span class="comment-date">@comment.DatePosted.ToString("dd.MM.yyyy HH:mm")</span>
                        </div>
                        <p class="comment-text">
                            @comment.Text
                        </p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@code {
    [Inject]
    private IJSRuntime JSRuntime { get; set; } = default!;
    
    [Parameter]
    public int MovieId { get; set; }
    
    //comment
    private string _username = string.Empty;
    private string _comment = string.Empty;

    private static List<Comment> _comments = new();
    private static LUMI.Models.Movie _movieDetails = new();
    

    protected override async Task OnInitializedAsync() {
        _movieDetails = await MoviesDBContext.GetMovieByIDAsync(MovieId);
        _comments = await MoviesDBContext.GetCommentsToMovieAsync(MovieId);
    }
    
    protected async Task AddComment() {
        var model = new LUMI.Models.Comment() {
            MovieID = _movieDetails.ID,
            Username = _username,
            Text = _comment,
            DatePosted = DateTime.Now
        };
        if (!string.IsNullOrEmpty(model.Username) && !string.IsNullOrEmpty(model.Text)) {
            await MoviesDBContext.AddCommentToMovieAsync(model);
            _comments.Add(model);
            _comment = string.Empty;
            _username = string.Empty;   
        }
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            await JSRuntime.InvokeVoidAsync("initializeKinoboxPlayer", _movieDetails.TmdbID);
        }
    }
    
    private async Task ScrollToMovie()
    {
        await JSRuntime.InvokeVoidAsync("scrollToId", "watch_movie");
    }
}
